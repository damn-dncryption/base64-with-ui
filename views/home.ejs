<%- include('partials/header'); %>
	<div class="container mx-auto px-2">
		<div>
			<nav class="flex py-2 px-4" aria-label="Breadcrumb">
				<ol class="inline-flex items-center space-x-1 md:space-x-3">
					<li class="inline-flex items-center">
						<a href="/"
							class="inline-flex items-center text-sm font-medium text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-white">
							<svg class="mr-2 w-4 h-4" fill="currentColor" viewBox="0 0 20 20"
								xmlns="http://www.w3.org/2000/svg">
								<path
									d="M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z">
								</path>
							</svg>
							Home
						</a>
					</li>
				</ol>
			</nav>
			<form class="container max-w-md mx-auto" onsubmit="submitHandle(event, 'media')">
				<div class=" bg-white flex flex-col md:ml-auto w-full md:py-8 mt-8 md:mt-0">
					<h2 class="text-gray-900 text-lg mb-1 font-medium title-font">Choose Media</h2>
					<div class="relative mb-4">
						<label for="message" class="leading-7 text-sm text-gray-600">Media</label>
						<input required type="file" name="file" id="media"
							class="w-full bg-white rounded border border-gray-300 focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out">
						<input type="text" name="folder" id="subFolder"
							class="w-full bg-white rounded border border-gray-300 focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out">
					</div>
					<button
						class="text-white bg-indigo-500 border-0 py-2 px-6 focus:outline-none hover:bg-indigo-600 rounded text-lg">submit</button>
				</div>
			</form>



			<form class="container max-w-md mx-auto" onsubmit="submitHandle(event, 'img')">
				<div class=" bg-white flex flex-col md:ml-auto w-full md:py-8 mt-8 md:mt-0">
					<h2 class="text-gray-900 text-lg mb-1 font-medium title-font">Choose Images</h2>
					<div class="relative mb-4">
						<label for="message" class="leading-7 text-sm text-gray-600">Image</label>
						<input required type="file" name="file" id="media"
							class="w-full bg-white rounded border border-gray-300 focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out">
					</div>
					<button
						class="text-white bg-indigo-500 border-0 py-2 px-6 focus:outline-none hover:bg-indigo-600 rounded text-lg">submit</button>
				</div>
			</form>




			<form class="container max-w-md mx-auto" onsubmit="submitHandle(event, 'txt')">
				<div class=" bg-white flex flex-col md:ml-auto w-full md:py-8 mt-8 md:mt-0">
					<h2 class="text-gray-900 text-lg mb-1 font-medium title-font">Choose text</h2>
					<div class="relative mb-4">
						<label for="message" class="leading-7 text-sm text-gray-600">Text file</label>
						<input required type="file" name="file" id="media"
							class="w-full bg-white rounded border border-gray-300 focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out">
					</div>
					<button
						class="text-white bg-indigo-500 border-0 py-2 px-6 focus:outline-none hover:bg-indigo-600 rounded text-lg">submit</button>
				</div>
			</form>



			<a href="/files" class="py-2 px-6 bg-blue border border-2 border-indigo-500 rounded mt-3"
				style="display: inline-block;">
				files
			</a>
		</div>

		<script>
			const getBase64 = (file) => new Promise((res, rej) => {
				const reader = new FileReader();
				reader.readAsDataURL(file);
				reader.onload = () => {
					return res(reader.result);
				};
				reader.onerror = (error) => {
					return rej(error);
				};
			})


			const submitHandle = async (e, fileType) => {
				e.preventDefault();
				let files = e.target.querySelector("input#media").files;
				let folder = e.target.querySelector("input#subFolder").value;
				// subFolder

				let data = []
				console.log(files[0]);
				for (let i = 0; i < files.length; i++) {
					const file = files[i];
					data.push(file)
					let da = await getBase64(file);
				}
				let newData = await Promise.all(
					data.map((file) => getBase64(file))
				)
				console.log(newData);
				fetch('/save', {
					method: "POST",
					headers: {
						"Content-Type": "application/json"
					},
					body: JSON.stringify({
						type: fileType,
						files: newData,
						folder: folder,
					})
				}).then(res => {
					console.log(res);
					alert(fileType + " saved")
				}).catch(err => {
					alert("error saving " + fileType)
					console.log(err);
				})
			}

		</script>
	</div>
<%- include('partials/logout'); %>
	<%- include('partials/footer'); %>